
- hosts: all
  gather_facts: true
  vars:
    kolla_deployer_ssh_pub: kolla-deployer-id_rsa.pub
    install_collections:
      rpms:
      - ansible-collection-community-crypto
      - ansible-collection-community-general

  vars_files:
  - globals-overwrite.yml

  tasks:
  # - name: Block to Generate inventory for multinode
  #   block:
  #   - name: Get openstack hosts from target inventory
  #     ansible.builtin.shell: ansible-inventory -i {{ TARGET_INVENTORY }} --list|jq '._meta.hostvars|keys'|yq .
  #     register: _host_keys

  #   - name: Set fact target_openstack_nodes
  #     ansible.builtin.set_fact:
  #       target_openstack_nodes: "{{ _host_keys.stdout }}"

  #   - name: Show target_openstack_nodes
  #     ansible.builtin.debug:
  #       var: target_openstack_nodes

  #   - name: Set fact control and compute lists
  #     ansible.builtin.set_fact:
  #       control: []
  #       compute: []

  #   - name: Append 
  #     ansible.builtin.shell: ansible-inventory -i {{ TARGET_INVENTORY }} --list|jq '._meta.hostvars|keys'|yq .
  #     with_items: "{{ target_openstack_nodes }}"
  #   when:
  #   - build_type == "multinode"
  #   - generate_multinode_inventory|bool

  # - name: Include vars from globals-overwrite.yml
  #   ansible.builtin.include_vars:
  #     file: globals-overwrite.yml

  - name: Install epel repo
    ansible.builtin.dnf:
      name: "{{ item.package }}"
      state: latest
    with_items: "{{ epel_repo }}"
    when: item.os == ansible_distribution

  - name: Install ansible collections
    ansible.builtin.dnf:
      name: "{{ install_collections.rpms }}"
      state: latest

  - name: Copy kolla-env setup script
    ansible.builtin.copy:
      src: kolla-deployment-host.sh
      dest: /root/
      mode: 0755

  - name: Set WORKDIR fact
    ansible.builtin.set_fact:
      WORKDIR: "{{ ansible_env.HOME }}"
    when: WORKDIR is not defined and inventory_hostname != "localhost"

  - name: Template out globals.yml
    ansible.builtin.template:
      src: globals.yml.j2
      dest: "{{ WORKDIR }}/globals.yml"
      mode: 0644

  - name: Get stat of "{{ ost_nodes_inventory }}"
    ansible.builtin.stat:
      path: "{{ ost_nodes_inventory }}"
    register: _nodes_inventory

  - name: Set fact ost_nodes_inventory
    ansible.builtin.set_fact:
      ost_nodes_inventory: "ost-nodes-inventory/{{ ost_nodes_inventory }}"
    when: not _nodes_inventory.stat.exists

  - name: Copy multinode inventory file
    ansible.builtin.copy:
      src: "{{ ost_nodes_inventory }}"
      dest: "{{ WORKDIR }}/{{ build_type }}"
      mode: 0644

  - name: Generate an OpenSSH keypair
    community.crypto.openssh_keypair:
      path: "{{ ansible_env.HOME }}/.ssh/id_rsa"
      owner: root
      group: root
      type: rsa
